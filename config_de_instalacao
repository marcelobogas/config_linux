##*** Alterar o servidor DNS temporáriamente ***
#echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf > /dev/null

##*** Habilitar o firewall na inicialização do sistema ***
sudo ufw enable
sudo ufw default deny incoming && sudo ufw default allow outgoing

#Permissão para as portas
sudo ufw allow 20/tcp
sudo ufw allow 21/tcp
sudo ufw allow 80/tcp
sudo ufw allow 8080/tcp
sudo ufw allow 443/tcp
sudo ufw allow 8443/tcp
sudo ufw status verbose

##*** Instalar acesso seguro - servidor (ssh) ***
sudo apt install -y openssh-server
sudo systemctl enable ssh && sudo systemctl restart ssh

##*** PHP 7.4 ***
sudo apt install php7.4 libapache2-mod-php7.4 php7.4-dev php7.4-common php7.4-xml php7.4-gd php7.4-opcache php7.4-mbstring php7.4-json php7.4-zip php7.4-mysql php7.4-pgsql php7.4-curl unzip -y

sudo apt install build-essential vim gedit gdebi git curl apache2 synapse flameshot tree gnome-tweaks gparted preload vsftpd filezilla -y

sudo apt update 

##*** Composer ***
curl -sS https://getcomposer.org/installer | php && sudo mv composer.phar /usr/local/bin/composer
sudo chown -R $USER: /home/$USER/.config/composer
sudo chmod 755 /home/$USER/.config/composer/composer.json

echo '{
	"require": {
		"php": "^7.4|^8.0",
		"laravel/installer": "^4.1"
	}
}' >> /home/$USER/.config/composer/composer.json

cd /home/$USER/.config/composer/
composer install
cd /home/$USER/

##---Setar variável de ambiente global do composer---
echo 'export PATH="$PATH:$HOME/.config/composer/vendor/bin"' >> ~/.bashrc 
source ~/.bashrc

##--- Atualizar versão do composer ---
#Executar esse comando dentro do diretório /home/$USER/.config/composer
#composer self-update

##*** Instalar o nodejs e o npm
sudo apt install curl dirmngr apt-transport-https lsb-release ca-certificates -y
curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -

sudo apt install nodejs gcc g++ make -y

##*** Instalar GRUB ***
sudo apt update
sudo apt install grub-customizer -y

#Desinstalar
#sudo add-apt-repository ppa:danielrichter2007/grub-customizer -r -y
#sudo apt remove grub-customizer --auto-remove

##*** Link para a pasta FTP do Apache ***
mkdir -m755 /home/$USER/ftp /home/$USER/ftp/public -p
sudo chown -R $USER: /home/$USER/ftp
sudo ln -s /home/$USER/ftp/public /var/www/html/ftp
sudo chown -R $USER: /var/www/html/ftp/

#Abrir o arquivo
#sudo vim /etc/vsftpd.conf

#Descomentar as linhas
#anonymous_enable=NO
#local_enable=YES
#write_enable=YES
#chroot_local_user=YES

#Acrescentar no final do arquivo
echo 'allow_writeable_chroot=YES' | sudo tee -a /etc/vsftpd.conf
echo 'user_sub_token=$USER' | sudo tee -a /etc/vsftpd.conf
echo 'local_root=/home/$USER/ftp/public' | sudo tee -a /etc/vsftpd.conf

##*** Instalar o Chrome ***
sudo apt update && sudo apt upgrade
sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo mv google-chrome-stable_current_amd64.deb /opt/
sudo gdebi /opt/./google-chrome-stable_current_amd64.deb 
#sudo gdebi /media/$USER/ARQUIVOS/Programas/Linux/./google-chrome-stable_current_amd64.deb

##*** Remover o openjdk ***
#sudo apt remove --purge openjdk-*

##*** Instalação manual do JAVA ***
#Link para download
#https://www.oracle.com/technetwork/pt/java/javase/downloads/jdk8-downloads-2133151.html

#Criar o diretório de instalação e dar permissão
sudo mkdir -m755 /usr/lib/jvm -R

#Mover o arquivo para o diretório de instalação
#mv /Downloads/jdk-8u221-linux-x64.tar.gz /usr/lib/jvm

#Descompactar o arquivo
#cd /usr/lib/jvm/
#sudo tar -xzf jdk-8u251-linux-x64.tar.gz

#Registrar o Java
#sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.8.0_251/bin/java 10

#Verificar versão
#java -version

#Remover
#sudo update-alternatives --remove java /usr/java/jdk1.7.0_67/bin/java
#sudo update-alternatives --config java

##*** Instalar PostgreSQL ***
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo apt update
sudo apt install postgresql -y

Instalar o PgAdmin4
sudo curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add
sudo sh -c 'echo "deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'
sudo apt install pgadmin4-desktop -y

##*** Montar partições NTFS na inicialização do Linux ***
#sudo blkid (mostra as partições ativas para descobrir o UUID)
#Label:Compartilhado, UUID=A1A1A1A1A1A1A1A1

#sudo gedit /etc/fstab
#Acrescentar no arquivo 
echo 'UUID=A1A1A1A1A1A1A1A1 /media/Arquivos ntfs-3g defaults 0 0' | sudo tee -a /etc/fstab

#Criar o diretório de montagem
mkdir -m755 /media/Arquivos -R
sudo chown -R $USER: /media/Arquivos

##*** Instalar Arduino ***
#Baixar o pacote de instalação pelo link: https://www.arduino.cc/en/Main/Software
#cd /Downloads
#sudo mv arduino-1.8.9 /opt
#cd /opt/arduino-1.8.9/
#ls -l
#chmod +x install.sh
#./install.sh

#Comando para eliminar o erro:
#error: ser_open(): can't open device "/dev/ttyACM0": Permission denied

#Abrir o terminal
#sudo usermod -a -G dialout $USER
#sudo chmod a+rw /dev/ttyACM0

*** Instalar Mysql Server ***
sudo apt install mysql-server mysql-client -y

#sudo mysql -u root -p
#CREATE USER 'novousuario'@'localhost' IDENTIFIED BY 'password';
#GRANT ALL PRIVILEGES ON * . * TO 'novousuario'@'localhost';
#FLUSH PRIVILEGES;
#\q

#Permissão para usuário root entrar sem utilizar o sudo
#sudo mysql -u root -p
#ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';
#FLUSH PRIVILEGES;
#\q 

##*** Instalar o Phpmyadmin ***
sudo apt install phpmyadmin -y

##--- config para phpmyadmin logar sem senha
#Abrir o arquivo /etc/phpmyadmin/config.inc.php

##--descomentar a linha
#$cfg['Servers'][$i]['AllowNoPassword'] = TRUE;

#Instalar Sublime Text
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
sudo apt-get install apt-transport-https
echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
sudo apt update
sudo apt install sublime-text

##*** Instalação do VSCode ***
sudo rm /etc/apt/preferences.d/nosnap.pref
sudo apt update
sudo apt install snapd -y
sudo snap install code --classic

##*** Instalar o Atom ***
sudo apt install software-properties-common apt-transport-https wget
wget -q https://packagecloud.io/AtomEditor/atom/gpgkey -O- | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main"
sudo apt install atom

## *** Instalar o Postman ***
sudo snap install postman

##*** Instalar o BOOT REPAIR ***
sudo apt install boot-repair -y

#Para desinstalar
#sudo add-apt-repository ppa:yannubuntu/boot-repair -r -y
#sudo apt remove boot-repair --auto-remove

#*** Instalação do SQL SERVER ***
wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
sudo add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/20.04/mssql-server-2019.list)"
sudo apt update
sudo apt install mssql-server -y
sudo /opt/mssql/bin/mssql-conf setup
#systemctl status mssql-server --no-pager

#*** Acesso por linha de comando ao SQL SERVER ***
curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
sudo apt update 
sudo apt install mssql-tools unixodbc-dev

#*** Atualizar a versão ***
sudo apt update 
sudo apt install mssql-tools

echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
source ~/.bashrc

#*** Drivers sqlsrv para PHP
sudo pecl install sqlsrv
sudo pecl install pdo_sqlsrv
sudo su
printf "; priority=20\nextension=sqlsrv.so\n" > /etc/php/7.4/mods-available/sqlsrv.ini
printf "; priority=30\nextension=pdo_sqlsrv.so\n" > /etc/php/7.4/mods-available/pdo_sqlsrv.ini
exit
sudo phpenmod sqlsrv pdo_sqlsrv
sudo service apache2 restart

sudo apt update && sudo apt autoremove -y
